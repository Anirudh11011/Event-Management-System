# This section defines all the containers (services) that make up your application.
services:
  #########################################
  #   APPLICATION SERVICES
  #########################################
  ems-client:
    build:
      context: ./ems-client
      dockerfile: Dockerfile
    container_name: ems-client
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    networks:
      - event-net

  ems-gateway:
    build:
      context: ./ems-gateway
      dockerfile: Dockerfile
    container_name: ems-gateway
    ports:
      - "80:80"
    volumes:
      - ./ems-gateway/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - event-net
    depends_on:
      - ems-client
      - auth-service
      - event-service

  #########################################
  #   BACKEND MICROSERVICES
  #########################################
  auth-service: &base-service
    build:
      context: ./ems-services/auth-service
      dockerfile: Dockerfile
      args:
        - DATABASE_URL=postgresql://admin:password@auth-service-db:5432/auth_db
    container_name: auth-service
    restart: unless-stopped
    env_file:
      ./ems-services/auth-service/.env.production
    networks:
      - event-net
    depends_on:
      auth-service-db:
        condition: service_healthy
      rabbitmq:
        condition: service_started

  event-service:
    <<: *base-service
    build:
      context: ./ems-services/event-service
      dockerfile: Dockerfile
      args:
        - DATABASE_URL=postgresql://admin:password@event-service-db:5432/event_db
    container_name: event-service
    environment:
      - PORT=3000
      - DATABASE_URL=postgresql://admin:password@event-service-db:5432/event_db
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - JWT_SECRET=secretkey
    depends_on:
      event-service-db:
        condition: service_healthy

  #########################################
  #   DATABASES FOR MICROSERVICES
  #########################################

  auth-service-db: &base-service-db
    image: postgres:14-alpine
    container_name: auth-service-db
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=auth_db
    volumes:
      - auth-service-data:/var/lib/postgresql/data
    networks:
      - event-net
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin" ]
      interval: 10s
      timeout: 5s
      retries: 5

  event-service-db:
    <<: *base-service-db
    container_name: event-service-db
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=event_db
    volumes:
      - event-service-data:/var/lib/postgresql/data

  #########################################
  #   INFRASTRUCTURE SERVICES
  #########################################
  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - event-net
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5

# This section defines the custom network for our services to communicate.
networks:
  event-net:
    driver: bridge

# This section defines a volume for persisting data.
volumes:
  auth-service-data:
  event-service-data: